{"version":3,"sources":["Navbar.js","ProjectList.js","Portfolio.js","Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","useState","name","className","href","ProjectList","projects","heading","map","project","title","summary","id","Portfolio","image","deployed","github","description","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAkBeA,EAhBA,WACb,MAAwBC,mBAAS,mBAAjC,mBAAOC,EAAP,UAEA,OACE,sBAAKC,UAAU,SAAf,UACE,6BAAMD,IACN,sBAAKC,UAAU,QAAf,UACE,mBAAGC,KAAK,IAAR,sBACA,mBAAGA,KAAK,aAAR,uBACA,mBAAGA,KAAK,WAAR,qBACA,mBAAGA,KAAK,UAAR,2BCGOC,EAfK,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QAE/B,OACE,sBAAKJ,UAAU,eAAf,UACE,6BAAMI,IACLD,EAASE,KAAI,SAACC,GAAD,OACZ,sBAAKN,UAAU,kBAAf,UACE,6BAAMM,EAAQC,QACd,4BAAKD,EAAQE,YAFuBF,EAAQG,WCcvCC,EAjBG,WAChB,MAAgCZ,mBAAS,CACvC,CAAEW,GAAI,EAAGF,MAAO,IAAKI,MAAO,OAAQC,SAAU,0BAA2BC,OAAQ,0BAA2BL,QAAS,YAAaM,YAAa,iBAC/I,CAAEL,GAAI,EAAGF,MAAO,IAAKI,MAAO,OAAQC,SAAU,0BAA2BC,OAAQ,0BAA2BL,QAAS,YAAaM,YAAa,iBAC/I,CAAEL,GAAI,EAAGF,MAAO,IAAKI,MAAO,OAAQC,SAAU,0BAA2BC,OAAQ,0BAA2BL,QAAS,YAAaM,YAAa,iBAC/I,CAAEL,GAAI,EAAGF,MAAO,IAAKI,MAAO,OAAQC,SAAU,0BAA2BC,OAAQ,0BAA2BL,QAAS,YAAaM,YAAa,iBAC/I,CAAEL,GAAI,EAAGF,MAAO,IAAKI,MAAO,OAAQC,SAAU,0BAA2BC,OAAQ,0BAA2BL,QAAS,YAAaM,YAAa,iBAC/I,CAAEL,GAAI,EAAGF,MAAO,IAAKI,MAAO,OAAQC,SAAU,0BAA2BC,OAAQ,0BAA2BL,QAAS,YAAaM,YAAa,mBANjJ,mBAAOX,EAAP,UASA,OACE,qBAAKH,UAAU,YAAf,SACE,cAAC,EAAD,CAAaG,SAAUA,EAAUC,QAAQ,iBCNhCW,EATA,WACb,OACE,yBAAQf,UAAU,SAAlB,UACE,iDACA,4BAAG,mBAAGC,KAAK,uBAAR,sCCiBMe,MAdf,WACE,OACE,sBAAKhB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,UAAf,SAGE,cAAC,EAAD,MAEF,cAAC,EAAD,QCJSiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.ecddce1e.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nconst Navbar = () => {\n  const [name, setName] = useState('My Name********');\n\n  return ( \n    <nav className=\"navbar\">\n      <h1>{ name }</h1>\n      <div className=\"links\">\n        <a href=\"/\">About me</a>\n        <a href=\"/portfolio\">Portfolio</a>\n        <a href=\"/contact\">Contact</a>\n        <a href=\"/resume\">Resume</a>\n      </div>\n    </nav>\n   );\n}\n \nexport default Navbar;","const ProjectList = ({ projects, heading }) => {\n\n  return ( \n    <div className=\"project-list\">\n      <h2>{ heading }</h2>\n      {projects.map((project) => (\n        <div className=\"project-preview\" key={project.id}>\n          <h2>{ project.title }</h2>\n          <p>{ project.summary}</p>\n        </div>\n      ))}\n    </div>\n   );\n}\n \nexport default ProjectList;","import { useState } from \"react\";\nimport ProjectList from \"./ProjectList\";\n\nconst Portfolio = () => {\n  const [projects, setProjects] = useState([\n    { id: 1, title: 'A', image: 'none', deployed: 'https://wwww.google.com', github: 'https://wwww.google.com', summary: 'A summary', description: 'A description' },\n    { id: 2, title: 'B', image: 'none', deployed: 'https://wwww.google.com', github: 'https://wwww.google.com', summary: 'B summary', description: 'B description' },\n    { id: 3, title: 'C', image: 'none', deployed: 'https://wwww.google.com', github: 'https://wwww.google.com', summary: 'C summary', description: 'C description' },\n    { id: 4, title: 'D', image: 'none', deployed: 'https://wwww.google.com', github: 'https://wwww.google.com', summary: 'D summary', description: 'D description' },\n    { id: 5, title: 'E', image: 'none', deployed: 'https://wwww.google.com', github: 'https://wwww.google.com', summary: 'E summary', description: 'E description' },\n    { id: 6, title: 'F', image: 'none', deployed: 'https://wwww.google.com', github: 'https://wwww.google.com', summary: 'F summary', description: 'F description' },\n  ]);\n\n  return ( \n    <div className=\"portfolio\">\n      <ProjectList projects={projects} heading=\"Portfolio\" />\n    </div>\n   );\n}\n \nexport default Portfolio;","const Footer = () => {\n  return ( \n    <footer className=\"footer\">\n      <p>some footer text</p>\n      <p><a href=\"mailto:blah@blah.com\">*****blah@blah.com</a></p>\n    </footer>\n   );\n}\n \nexport default Footer;","// import logo from './logo.svg';\nimport Navbar from './Navbar';\nimport Aboutme from './Aboutme';\nimport Portfolio from './Portfolio';\nimport Contact from './Contact';\nimport Footer from './Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <div className=\"content\">\n        {/* <Aboutme /> */}\n        {/* <Contact /> */}\n        <Portfolio />\n      </div>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n{/* <header className=\"App-header\">\n<h1>This is a test</h1>\n<img src={logo} className=\"App-logo\" alt=\"logo\" />\n<p>\n  Edit <code>src/App.js</code> and save to reload.\n</p>\n<a\n  className=\"App-link\"\n  href=\"https://reactjs.org\"\n  target=\"_blank\"\n  rel=\"noopener noreferrer\"\n>\n  Learn React\n</a>\n</header> */}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}