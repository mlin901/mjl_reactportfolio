{"version":3,"sources":["Navbar.js","Aboutme.js","ProjectList.js","images/Marvelizer2.jpg","images/carboLoader2.jpg","images/techBlog.jpg","images/weatherAppScreenshot.png","images/CalendarAppScreenCap.jpg","images/sdedoc.jpg","Portfolio.js","Contact.js","Resume.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","useState","name","className","exact","activeClassName","to","process","Aboutme","class","id","ProjectList","projects","heading","map","project","src","image","alt","title","description","href","deployed","github","summary","Portfolio","marvelizer","carboloader","techblog","weatherdashboard","workdayscheduler","sdedoc","Contact","setName","email","setEmail","message","setMessage","emailValidity","setEmailValidity","emailRegex","onSubmit","e","preventDefault","match","alert","type","required","value","onChange","target","Resume","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6fe5733.chunk.js","sourcesContent":["import { useState } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport { NavLink } from \"react-router-dom\";\n\n\n\nconst Navbar = () => {\n  const [name, setName] = useState('Matthew Linder');\n\n  return ( \n    <header>\n      <h1>{ name }</h1>\n      <nav>\n        <ul className=\"links\">\n          <li><NavLink exact activeClassName=\"active\" to={process.env.PUBLIC_URL + '/'}>About me</NavLink></li>\n          <li><NavLink exact activeClassName=\"active\" to={process.env.PUBLIC_URL + '/portfolio'}>Portfolio</NavLink></li>\n          <li><NavLink exact activeClassName=\"active\" to={process.env.PUBLIC_URL + '/contact'}>Contact</NavLink></li>\n          <li><NavLink exact activeClassName=\"active\" to={process.env.PUBLIC_URL + '/resume'}>Resume</NavLink></li>\n        </ul>\n        {/* <ul className=\"links\">\n          <li><Link to={process.env.PUBLIC_URL + '/'}>About me</Link></li>\n          <li><Link to={process.env.PUBLIC_URL + '/portfolio'}>Portfolio</Link></li>\n          <li><Link to={process.env.PUBLIC_URL + '/contact'}>Contact</Link></li>\n          <li><Link to={process.env.PUBLIC_URL + '/resume'}>Resume</Link></li>\n        </ul> */}\n      </nav>\n    </header>\n   );\n}\n \nexport default Navbar;","const Aboutme = () => {\n  return ( \n    <div className=\"aboutme\">\n      <section class=\"maincontent\" id=\"aboutme\">\n            <h2>About me</h2>\n            <div class=\"textcont\">\n                <p>Web Developer with experience in all phases of software product development, from requirements\n                and coding to quality assurance testing and post-implementation support. Earned a Certificate in\n                Full Stack Web Development from the University of California, Davis, with expertise in JavaScript, \n                jQuery, Node.js, React and more. Team-player focused on collaborative success, with excellent written \n                and verbal communication skills. Valued for developing robust solutions that bring lasting value \n                through optimized and efficient processes. Over ten years of experience in transforming labor-intensive\n                 manual workflows into automated, scripted processes that improve customer outcomes.</p>\n            </div>\n        </section>\n    </div>\n   );\n}\n \nexport default Aboutme;","// It isn't really necessary to split this out from the Portfolio component,\n// except that enables me to use props, which is what the { projects, heading } \n// in the first line of code is doing (via destructuring).\nconst ProjectList = ({ projects, heading }) => {\n\n  return ( \n    <section class=\"maincontent\" id=\"work\">\n\n      <h2>Portfolio</h2>\n      <div className=\"cards\">\n        <div className=\"cardcontainer\">\n\n          {projects.map((project) => (\n            <figure className=\"cardfig\">\n              <div className=\"img__wrap\">\n                <img src={ project.image } alt=\"The Marvelizer web app\"></img>\n                <div className=\"img__description_layer\">\n                  <p className=\"img__description\"> <span className=\"proj_title\">{ project.title }</span>\n                    { project.description }<br/><br />\n                    Deployed: <a className='proj_links' href={ project.deployed }>{ project.deployed }</a><br />\n                    {/* Not all projects have a github repo, which makes the following conditinal template necessary */}\n                    { project.github && <div>GitHub: <a className='proj_links' href={ project.github }>{ project.github }</a></div>}\n                  </p>\n                </div>\n                <div className=\"cardinset\">\n                    <h3>{ project.title }<br />{ project.summary }</h3>\n                    <p>Hover for details</p>\n                </div>\n              </div>\n            </figure>\n          ))}\n\n        </div>\n      </div>\n    </section>\n   );\n}\n\nexport default ProjectList;","export default __webpack_public_path__ + \"static/media/Marvelizer2.44cbb269.jpg\";","export default __webpack_public_path__ + \"static/media/carboLoader2.8cf2dde3.jpg\";","export default __webpack_public_path__ + \"static/media/techBlog.2285132f.jpg\";","export default __webpack_public_path__ + \"static/media/weatherAppScreenshot.c1d46ef4.png\";","export default __webpack_public_path__ + \"static/media/CalendarAppScreenCap.959a2016.jpg\";","export default __webpack_public_path__ + \"static/media/sdedoc.362fcdfc.jpg\";","import { useState } from \"react\";\nimport ProjectList from \"./ProjectList\";\nimport marvelizer from './images/Marvelizer2.jpg';\nimport carboloader from './images/carboLoader2.jpg';\nimport techblog from './images/techBlog.jpg';\nimport weatherdashboard from './images/weatherAppScreenshot.png';\nimport workdayscheduler from './images/CalendarAppScreenCap.jpg';\nimport sdedoc from './images/sdedoc.jpg';\n\nconst Portfolio = () => {\n  const [projects, setProjects] = useState([\n    { id: 0, title: 'The MARVELizer', image: marvelizer, deployed: 'https://zoneam.github.io/Marvelizer/', \n      github: 'https://github.com/mlin901/Marvelize', \n      summary: 'Giphys for Marvel characters', \n      description: ` is a web app that enables you to search for a Marvel character, view information and Giphys related to the character, \n                    and save favorite Giphys. The search feature queries the Marvel API for a character’s description and a thumbnail, and \n                    it uses the character name to query the Giphy API for the Giphys related to the character. <br /> This application \n                    utilizes Foundation, APIs (Marvel and Giphy), JQuery, JavaScript, and local storage.` \n    },\n    { id: 1, title: 'Carbo-Loader', image: carboloader, deployed: 'https://infinite-stream-14480.herokuapp.com/', \n      github: 'https://github.com/mlin901/carb_counter', \n      summary: 'Caculate carbs for meals', \n      description: ` enables users to track carbohydrates for their meals. The Nutritionix API node module is used to search and capture \n                    carbohydrate and fiber content, and users can also search for specific quantities. The search results can be added to a\n                    user's current meal and a carbohydrate total for the entire meal is tallied. Individual foods can be marked as a \n                    favorite for easy retrieval later and meals can be saved for future reference. <br />This application utilizes \n                    Node.js, a MySQL database, Express server, Handlebars, Sequelize ORM, Express Session middleware for cookies, and\n                    bcrypt for password protection.` \n    },\n    { id: 2, title: 'The Tech Blog', image: techblog, deployed: 'https://secure-ridge-69918.herokuapp.com/', \n      github: 'https://github.com/mlin901/theDopeOnDev', \n      summary: 'The real scoop on tech', \n      description: ` is a blog site that enables you to view blog posts, and if you're logged in, it enables you to add, edit, delete, and \n                    comment on blog posts. <br />This app follows the MVC paradigm and uses the following technologies: Node.js, the \n                    dotenv npm package, Handlebars.js, Express.js, the express-session npm package, \n                    Heroku, Sequelize.js, the bcrypt npm package, and the connect-session-sequelize npm package.` \n    },\n    { id: 3, title: 'Weather Dashboard', image: weatherdashboard, deployed: 'https://mlin901.github.io/mjl-weatherDashboard/', \n      github: 'https://github.com/mlin901/mjl-weatherDashboard', \n      summary: 'Retrieve weather data for cities', \n      description: ` is a web app that uses the OpenWeather API to retrieve weather data for cities. When user enters a city name and clicks\n                    Go, the dashbard app uses the city name for two API searches, populates data area (upper right) with city info, populates\n                    the forcast area (lower right) with forcast information for the next five days, saves name of the city to local storage \n                    and retrieves saved city names when the page is opened or refreshed, and adds the city name to a list that can be used \n                    for future searches.` \n    },\n    { id: 4, title: 'Work Day Scheduler', image: workdayscheduler, deployed: 'https://mlin901.github.io/mjl-calendarApp/', \n      github: 'https://github.com/mlin901/mjl-calendarApp', \n      summary: \"Schedule the day's tasks\", \n      description: ` is a calendar app that associates tasks with timeblocks in the day. Tasks are saved to local storage, and when the app\n                    is opened or refreshed, tasks are retrieved from local storage and displayed in their associated timeblocks.<br />\n                    This application is built with the following: Moment.js, Bootstrap, Font Awsome, JavaScript,\n                    and JQuery.` \n    },\n    { id: 5, title: 'Synergy/DE documentation', image: sdedoc, deployed: 'https://www.synergex.com/docs/', \n      summary: '>Synergy DBL documentation', \n      description: ` is the documentation for Synergy DBL, which is the modern version of the DIBOL language. It includes various \n                    development tools. This documentation is created with MadCap Flare, JavaScript, JQuery, \n                    and C# post-build processing programs.` \n    },\n  ]);\n\n  return ( \n    <section class=\"maincontent\" id=\"work\">\n      <div className=\"portfolio\">\n        <ProjectList projects={projects} heading=\"Portfolio\" />\n      </div>\n    </section>\n   );\n}\n \nexport default Portfolio;","import { useState } from \"react\";\n\nconst Contact = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const [emailValidity, setEmailValidity] = useState('');\n  const emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (email.match(emailRegex)) {\n      setEmailValidity('');\n      alert(\"Submitted...\");\n      setName('');\n      setEmail('');\n      setMessage('');\n    } else {\n      setEmailValidity('invalid')\n    }\n  }\n\n  return ( \n    <div className=\"contact\">\n      <section class=\"maincontent\">\n        <h2>Contact</h2>\n        <div class=\"textcont\">\n          <form onSubmit={ handleSubmit }>\n            <label>Name:</label>\n            <input \n              type=\"text\"\n              required\n              value={ name }\n              onChange={(e) => setName(e.target.value)} \n            />\n            <label>Email address:</label>\n            <input \n              type = \"text\"\n              required\n              value={ email }\n              onChange={(e) => {setEmail(e.target.value); setEmailValidity('')}} \n            />\n            {emailValidity && <p className=\"invalid\">Email is invalid. Enter a valid email and resubmit.</p> }\n            <label>Message:</label>\n            <textarea\n              required\n              value={message}\n              onChange={(e) => setMessage(e.target.value)} \n            ></textarea>\n            <button type=\"submit\">Submit</button>\n          </form>\n        </div>\n     </section>\n    </div>\n   );\n}\n \nexport default Contact;","const Resume = () => {\n  return ( \n    <div className=\"resume\">\n    <section class=\"maincontent\">\n          <h2>Resume</h2>\n          <div class=\"textcont\">\n              <p>??????</p>\n              <p>??????</p>\n              <p>??????</p>\n              <p>??????</p>\n              <p>??????</p>\n              <p>??????</p>\n              <p>??????</p>\n              <p>??????</p>\n              <p>??????</p>\n              <p>??????</p>\n              <p>??????</p>\n              <p>??????</p>\n          </div>\n      </section>\n  </div>\n   );\n}\n \nexport default Resume;","// import logo from './logo.svg';\nimport Navbar from './Navbar';\nimport Aboutme from './Aboutme';\nimport Portfolio from './Portfolio';\nimport Contact from './Contact';\nimport Resume from './Resume';\n// import Footer from './Footer';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n// require('dotenv').config();\n\nfunction App() {\n\n  // const puburl = process.env.PUBLIC_URL;\n  return (\n    <Router>\n      <div className=\"App\">\n          <Navbar />\n        <section id=\"subtitlearea\">\n          <figure></figure>\n          <p id=\"subtitle\">Web developer and <br /> technical content specialist</p>\n        </section>\n\n        <main>\n          <Switch>\n            <Route exact path={process.env.PUBLIC_URL + '/portfolio'}>\n              <Portfolio />\n            </Route>\n            <Route exact path={process.env.PUBLIC_URL + '/contact'}>\n              <Contact />\n            </Route>\n            <Route exact path={process.env.PUBLIC_URL + '/resume'}>\n              <Resume />\n            </Route>\n            <Route exact path={process.env.PUBLIC_URL + '/'}>\n              <Aboutme />\n            </Route>\n          </Switch>\n        </main>\n        {/* <Footer /> */}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}